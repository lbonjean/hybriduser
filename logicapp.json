{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "13083103758876241283"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the Logic App"
      }
    },
    "logicAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Logic App"
      }
    },
    "managedIdentityId": {
      "type": "string",
      "metadata": {
        "description": "Managed Identity Resource ID"
      }
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Managed Identity Principal ID"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key Vault name"
      }
    },
    "adminUnitId": {
      "type": "string",
      "metadata": {
        "description": "Admin Unit GUID"
      }
    },
    "provisioningApiEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Provisioning API endpoint"
      }
    },
    "deadLetterStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Dead Letter Storage Account name"
      }
    },
    "deadLetterContainerName": {
      "type": "string",
      "metadata": {
        "description": "Dead Letter Container name"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "Log Analytics Workspace ID"
      }
    },
    "logAnalyticsCustomerId": {
      "type": "string",
      "metadata": {
        "description": "Log Analytics Workspace Customer ID (GUID)"
      }
    },
    "logAnalyticsPrimaryKey": {
      "type": "securestring",
      "metadata": {
        "description": "Log Analytics Workspace Primary Shared Key"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', parameters('managedIdentityId'))]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "keyVaultName": {
              "defaultValue": "[parameters('keyVaultName')]",
              "type": "String"
            },
            "adminUnitId": {
              "defaultValue": "[parameters('adminUnitId')]",
              "type": "String"
            },
            "provisioningApiEndpoint": {
              "defaultValue": "[parameters('provisioningApiEndpoint')]",
              "type": "String"
            },
            "deadLetterStorageAccount": {
              "defaultValue": "[parameters('deadLetterStorageAccountName')]",
              "type": "String"
            },
            "deadLetterContainer": {
              "defaultValue": "[parameters('deadLetterContainerName')]",
              "type": "String"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subscriptionId": {
                            "type": "string"
                          },
                          "clientState": {
                            "type": "string"
                          },
                          "expirationDateTime": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "resourceData": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "validationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "actions": {
            "Initialize_error_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "hasError",
                    "type": "boolean",
                    "value": false
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_error_message": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "errorMessage",
                    "type": "string",
                    "value": ""
                  }
                ]
              },
              "runAfter": {
                "Initialize_error_variable": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_user_id": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "userId",
                    "type": "string",
                    "value": ""
                  }
                ]
              },
              "runAfter": {
                "Initialize_error_message": [
                  "Succeeded"
                ]
              }
            },
            "Check_if_validation_request": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@triggerBody()?['validationToken']",
                        null
                      ]
                    }
                  }
                ]
              },
              "actions": {
                "Return_validation_token": {
                  "type": "Response",
                  "kind": "Http",
                  "inputs": {
                    "statusCode": 200,
                    "headers": {
                      "Content-Type": "text/plain"
                    },
                    "body": "@triggerBody()?['validationToken']"
                  }
                }
              },
              "else": {
                "actions": {
                  "For_each_notification": {
                    "type": "Foreach",
                    "foreach": "@triggerBody()?['value']",
                    "actions": {
                      "Set_user_id": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "userId",
                          "value": "@{last(split(items('For_each_notification')?['resource'], '/'))}"
                        },
                        "runAfter": {}
                      },
                      "Process_user_scope": {
                        "type": "Scope",
                        "actions": {
                          "Get_user_details": {
                            "type": "Http",
                            "inputs": {
                              "method": "GET",
                              "uri": "https://graph.microsoft.com/v1.0/users/@{variables('userId')}?$select=id,userPrincipalName,onPremisesImmutableId,displayName",
                              "authentication": {
                                "type": "ManagedServiceIdentity",
                                "identity": "[parameters('managedIdentityId')]",
                                "audience": "https://graph.microsoft.com"
                              }
                            },
                            "runAfter": {}
                          },
                          "Parse_user_details": {
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@body('Get_user_details')",
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userPrincipalName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "onPremisesImmutableId": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "runAfter": {
                              "Get_user_details": [
                                "Succeeded"
                              ]
                            }
                          },
                          "Check_admin_unit_membership": {
                            "type": "Http",
                            "inputs": {
                              "method": "GET",
                              "uri": "https://graph.microsoft.com/v1.0/directory/administrativeUnits/@{parameters('adminUnitId')}/members?$filter=id eq '@{variables('userId')}'",
                              "authentication": {
                                "type": "ManagedServiceIdentity",
                                "identity": "[parameters('managedIdentityId')]",
                                "audience": "https://graph.microsoft.com"
                              }
                            },
                            "runAfter": {
                              "Parse_user_details": [
                                "Succeeded"
                              ]
                            }
                          },
                          "Parse_admin_unit_response": {
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@body('Check_admin_unit_membership')",
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "array"
                                  }
                                }
                              }
                            },
                            "runAfter": {
                              "Check_admin_unit_membership": [
                                "Succeeded"
                              ]
                            }
                          },
                          "Check_if_in_admin_unit": {
                            "type": "If",
                            "expression": {
                              "and": [
                                {
                                  "greater": [
                                    "@length(body('Parse_admin_unit_response')?['value'])",
                                    0
                                  ]
                                }
                              ]
                            },
                            "actions": {
                              "Log_user_in_admin_unit": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "body": "@{json(concat('[{\"EventType\":\"UserInAdminUnit\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"AdminUnitId\":\"',parameters('adminUnitId'),'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                  "headers": {
                                    "Log-Type": "HybridUserSync"
                                  },
                                  "path": "/api/logs"
                                },
                                "runAfter": {}
                              },
                              "Check_if_hybrid": {
                                "type": "If",
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@body('Parse_user_details')?['onPremisesImmutableId']",
                                        null
                                      ]
                                    }
                                  ]
                                },
                                "actions": {
                                  "Log_provisioning_start": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                        }
                                      },
                                      "method": "post",
                                      "body": "@{json(concat('[{\"EventType\":\"ProvisioningStarted\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                      "headers": {
                                        "Log-Type": "HybridUserSync"
                                      },
                                      "path": "/api/logs"
                                    },
                                    "runAfter": {}
                                  },
                                  "Provision_user_to_ADDS": {
                                    "type": "Http",
                                    "inputs": {
                                      "method": "POST",
                                      "uri": "@{parameters('provisioningApiEndpoint')}",
                                      "authentication": {
                                        "type": "ManagedServiceIdentity",
                                        "identity": "[parameters('managedIdentityId')]",
                                        "audience": "https://graph.microsoft.com"
                                      },
                                      "headers": {
                                        "Content-Type": "application/json"
                                      },
                                      "body": {
                                        "id": "@{variables('userId')}",
                                        "userPrincipalName": "@{body('Parse_user_details')?['userPrincipalName']}",
                                        "displayName": "@{body('Parse_user_details')?['displayName']}"
                                      }
                                    },
                                    "runAfter": {
                                      "Log_provisioning_start": [
                                        "Succeeded"
                                      ]
                                    }
                                  },
                                  "Log_provisioning_success": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                        }
                                      },
                                      "method": "post",
                                      "body": "@{json(concat('[{\"EventType\":\"ProvisioningSuccess\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                      "headers": {
                                        "Log-Type": "HybridUserSync"
                                      },
                                      "path": "/api/logs"
                                    },
                                    "runAfter": {
                                      "Provision_user_to_ADDS": [
                                        "Succeeded"
                                      ]
                                    }
                                  }
                                },
                                "else": {
                                  "actions": {
                                    "Log_setting_source_of_authority": {
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$$connections')['azureloganalyticsdatacollector']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "body": "@{json(concat('[{\"EventType\":\"SettingSourceOfAuthority\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"ImmutableId\":\"',body('Parse_user_details')?['onPremisesImmutableId'],'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                        "headers": {
                                          "Log-Type": "HybridUserSync"
                                        },
                                        "path": "/api/logs"
                                      },
                                      "runAfter": {}
                                    },
                                    "Set_source_of_authority": {
                                      "type": "Http",
                                      "inputs": {
                                        "method": "PUT",
                                        "uri": "https://graph.microsoft.com/beta/users/@{variables('userId')}/onPremisesSyncBehavior",
                                        "authentication": {
                                          "type": "ManagedServiceIdentity",
                                          "identity": "[parameters('managedIdentityId')]",
                                          "audience": "https://graph.microsoft.com"
                                        },
                                        "headers": {
                                          "Content-Type": "application/json"
                                        },
                                        "body": {
                                          "@@odata.type": "microsoft.graph.onPremisesDirectorySynchronization",
                                          "synchronizationBehavior": "cloudMastered"
                                        }
                                      },
                                      "runAfter": {
                                        "Log_setting_source_of_authority": [
                                          "Succeeded"
                                        ]
                                      }
                                    },
                                    "Log_source_of_authority_success": {
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$$connections')['azureloganalyticsdatacollector']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "body": "@{json(concat('[{\"EventType\":\"SourceOfAuthoritySuccess\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                        "headers": {
                                          "Log-Type": "HybridUserSync"
                                        },
                                        "path": "/api/logs"
                                      },
                                      "runAfter": {
                                        "Set_source_of_authority": [
                                          "Succeeded"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Log_user_in_admin_unit": [
                                    "Succeeded"
                                  ]
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Log_user_not_in_admin_unit": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": "@{json(concat('[{\"EventType\":\"UserNotInAdminUnit\",\"UserId\":\"',variables('userId'),'\",\"UserPrincipalName\":\"',body('Parse_user_details')?['userPrincipalName'],'\",\"AdminUnitId\":\"',parameters('adminUnitId'),'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                                    "headers": {
                                      "Log-Type": "HybridUserSync"
                                    },
                                    "path": "/api/logs"
                                  },
                                  "runAfter": {}
                                }
                              }
                            },
                            "runAfter": {
                              "Parse_admin_unit_response": [
                                "Succeeded"
                              ]
                            }
                          }
                        },
                        "runAfter": {
                          "Set_user_id": [
                            "Succeeded"
                          ]
                        }
                      },
                      "Process_user_error_handler": {
                        "type": "Scope",
                        "actions": {
                          "Set_error_flag": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "hasError",
                              "value": true
                            },
                            "runAfter": {}
                          },
                          "Compose_error_details": {
                            "type": "Compose",
                            "inputs": {
                              "userId": "@{variables('userId')}",
                              "error": "@{result('Process_user_scope')}",
                              "notification": "@{items('For_each_notification')}",
                              "timestamp": "@{utcNow()}"
                            },
                            "runAfter": {
                              "Set_error_flag": [
                                "Succeeded"
                              ]
                            }
                          },
                          "Write_to_dead_letter": {
                            "type": "Http",
                            "inputs": {
                              "method": "PUT",
                              "uri": "https://@{parameters('deadLetterStorageAccount')}.blob.core.windows.net/@{parameters('deadLetterContainer')}/@{utcNow('yyyy-MM-dd_HHmmss')}_@{variables('userId')}.json",
                              "authentication": {
                                "type": "ManagedServiceIdentity",
                                "identity": "[parameters('managedIdentityId')]",
                                "audience": "https://storage.azure.com/"
                              },
                              "headers": {
                                "x-ms-blob-type": "BlockBlob",
                                "Content-Type": "application/json"
                              },
                              "body": "@outputs('Compose_error_details')"
                            },
                            "runAfter": {
                              "Compose_error_details": [
                                "Succeeded"
                              ]
                            }
                          },
                          "Log_error": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": "@{json(concat('[{\"EventType\":\"ProcessingError\",\"UserId\":\"',variables('userId'),'\",\"ErrorDetails\":\"',base64(string(result('Process_user_scope'))),'\",\"Timestamp\":\"',utcNow(),'\"}]'))}",
                              "headers": {
                                "Log-Type": "HybridUserSync"
                              },
                              "path": "/api/logs"
                            },
                            "runAfter": {
                              "Write_to_dead_letter": [
                                "Succeeded"
                              ]
                            }
                          }
                        },
                        "runAfter": {
                          "Process_user_scope": [
                            "Failed",
                            "Skipped",
                            "TimedOut"
                          ]
                        }
                      }
                    },
                    "runAfter": {}
                  },
                  "Return_success_response": {
                    "type": "Response",
                    "kind": "Http",
                    "inputs": {
                      "statusCode": 202,
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "body": {
                        "status": "accepted",
                        "processedCount": "@length(triggerBody()?['value'])",
                        "hasErrors": "@variables('hasError')"
                      }
                    },
                    "runAfter": {
                      "For_each_notification": [
                        "Succeeded",
                        "Failed"
                      ]
                    }
                  }
                }
              },
              "runAfter": {
                "Initialize_user_id": [
                  "Succeeded"
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureloganalyticsdatacollector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('azureloganalyticsdatacollector-{0}', parameters('logicAppName')))]",
                "connectionName": "[format('azureloganalyticsdatacollector-{0}', parameters('logicAppName'))]",
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureloganalyticsdatacollector')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', format('azureloganalyticsdatacollector-{0}', parameters('logicAppName')))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('azureloganalyticsdatacollector-{0}', parameters('logicAppName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "displayName": "Azure Log Analytics Connection",
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureloganalyticsdatacollector')]"
        },
        "parameterValues": {
          "username": "[parameters('logAnalyticsCustomerId')]",
          "password": "[parameters('logAnalyticsPrimaryKey')]"
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Logic/workflows/{0}', parameters('logicAppName'))]",
      "name": "diagnostics",
      "properties": {
        "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
        "logs": [
          {
            "category": "WorkflowRuntime",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
      ]
    }
  ],
  "outputs": {
    "logicAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[parameters('managedIdentityPrincipalId')]"
    }
  }
}